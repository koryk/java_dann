/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class syncleus_dann_DNA */

#ifndef _Included_syncleus_dann_DNA
#define _Included_syncleus_dann_DNA
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     syncleus_dann_DNA
 * Method:    nativeConstructor
 * Signature: ()I
 */
//JNIEXPORT jint JNICALL Java_syncleus_dann_DNA_nativeConstructor__
//  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    nativeConstructor
 * Signature: (DIIDDZDZ)I
 */
JNIEXPORT jint JNICALL Java_syncleus_dann_DNA_nativeConstructor__DIIDDZDZ
  (JNIEnv *, jobject, jdouble, jint, jint, jdouble, jdouble, jboolean, jdouble, jboolean);

/*
 * Class:     syncleus_dann_DNA
 * Method:    nativeDestructor
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_syncleus_dann_DNA_nativeDestructor
  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    getLearningRate
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_syncleus_dann_DNA_getLearningRate
  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    getMinimumOutgoing
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_syncleus_dann_DNA_getMinimumOutgoing
  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    getMaximumIncomming
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_syncleus_dann_DNA_getMaximumIncomming
  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    getMinimumWeight
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_syncleus_dann_DNA_getMinimumWeight
  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    getInitialMaxWeight
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_syncleus_dann_DNA_getInitialMaxWeight
  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    getUseMinimumWeight
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_syncleus_dann_DNA_getUseMinimumWeight
  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    getIncommingDropFactor
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_syncleus_dann_DNA_getIncommingDropFactor
  (JNIEnv *, jobject);

/*
 * Class:     syncleus_dann_DNA
 * Method:    getLayerdForward
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_syncleus_dann_DNA_getLayerdForward
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
