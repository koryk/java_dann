/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class dannjni_Neuron */

#ifndef _Included_dannjni_Neuron
#define _Included_dannjni_Neuron
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     dannjni_Neuron
 * Method:    nativeConstructor
 * Signature: (Ldannjni/Layer;Ldannjni/DNA;D)I
 */
JNIEXPORT jint JNICALL Java_dannjni_Neuron_nativeConstructor
  (JNIEnv *, jobject, jobject, jobject, jdouble);

/*
 * Class:     dannjni_Neuron
 * Method:    nativeDestructor
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_nativeDestructor
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    GetOutput
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_dannjni_Neuron_GetOutput
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    GetDNA
 * Signature: ()Ldannjni/DNA;
 */
JNIEXPORT jobject JNICALL Java_dannjni_Neuron_GetDNA
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    GetDeltaTrain
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_dannjni_Neuron_GetDeltaTrain
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    GetParentLayer
 * Signature: ()Ldannjni/Layer;
 */
JNIEXPORT jobject JNICALL Java_dannjni_Neuron_GetParentLayer
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    ConnectToNeuron
 * Signature: (Ldannjni/Neuron;D)Z
 */
JNIEXPORT jboolean JNICALL Java_dannjni_Neuron_ConnectToNeuron
  (JNIEnv *, jobject, jobject, jdouble);

/*
 * Class:     dannjni_Neuron
 * Method:    DisconnectAllDestinationSynapses
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_DisconnectAllDestinationSynapses
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    DisconnectAllSourceSynapses
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_DisconnectAllSourceSynapses
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    DisconnectAllSynapses
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_DisconnectAllSynapses
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    DisconnectSourceSynapse
 * Signature: (Ldannjni/Synapse;)Z
 */
JNIEXPORT jboolean JNICALL Java_dannjni_Neuron_DisconnectSourceSynapse
  (JNIEnv *, jobject, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    DisconnectDestinationSynapse
 * Signature: (Ldannjni/Synapse;)Z
 */
JNIEXPORT jboolean JNICALL Java_dannjni_Neuron_DisconnectDestinationSynapse
  (JNIEnv *, jobject, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    GetOutgoingConnectionCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_dannjni_Neuron_GetOutgoingConnectionCount
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    GetIncommingConnectionCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_dannjni_Neuron_GetIncommingConnectionCount
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    Propogate
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_dannjni_Neuron_Propogate
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    SetNeuronInput
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_SetNeuronInput
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     dannjni_Neuron
 * Method:    ResetNeuronInput
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_ResetNeuronInput
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    BackPropogateWeight
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_BackPropogateWeight
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    BackPropogateStructure
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_BackPropogateStructure
  (JNIEnv *, jobject);

/*
 * Class:     dannjni_Neuron
 * Method:    SetTrainingData
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_dannjni_Neuron_SetTrainingData
  (JNIEnv *, jobject, jdouble);

#ifdef __cplusplus
}
#endif
#endif
